# Default values for vscode-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- step-certificates injects configuration for step-ca
# to generate run the following command:
# `step ca init --helm --deployment-type=standalone --name=vscode-server-ca --dns=step-ca.svc.cluster.local --address=:443 --provisioner=step-ca-provisioner > values.yml`
step-certificates:
  inject:
    enabled: true
    # Config contains the configuration files ca.json and defaults.json
    config:
      files:
        ca.json:
          root: /home/step/certs/root_ca.crt
          federateRoots: []
          crt: /home/step/certs/intermediate_ca.crt
          key: /home/step/secrets/intermediate_ca_key
          address: :443
          dnsNames:
            - step-ca.svc.cluster.local
          logger:
            format: json
          db:
            type: badgerv2
            dataSource: /home/step/db
          authority:
            provisioners: []
          tls:
            cipherSuites:
              - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
              - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
            minVersion: 1.2
            maxVersion: 1.3
            renegotiation: false

        defaults.json:
          ca-url: https://step-ca.svc.cluster.local
          ca-config: /home/step/config/ca.json
          fingerprint:
          root: /home/step/certs/root_ca.crt

    # Certificates contains the root and intermediate certificate and 
    # optionally the SSH host and user public keys
    certificates:
      # intermediate_ca contains the text of the intermediate CA Certificate
      intermediate_ca:

      # root_ca contains the text of the root CA Certificate
      root_ca:

    # Secrets contains the root and intermediate keys and optionally the SSH
    # private keys
    secrets:
      # ca_password contains the password used to encrypt x509.intermediate_ca_key, ssh.host_ca_key and ssh.user_ca_key
      # This value must be base64 encoded.
      ca_password:
      provisioner_password:

      x509:
        # intermediate_ca_key contains the contents of your encrypted intermediate CA key
        intermediate_ca_key:

        # root_ca_key contains the contents of your encrypted root CA key
        # Note that this value can be omitted without impacting the functionality of step-certificates
        # If supplied, this should be encrypted using a unique password that is not used for encrypting
        # the intermediate_ca_key, ssh.host_ca_key or ssh.user_ca_key.
        root_ca_key:

vscode_server:
  nameOverride: ""
  fullnameOverride: ""
  password:
    # -- When true, enables creation of secret containing the code
    # server password and mapping of that secret to the PASSWORD
    # environment variable.
    enabled: false

    # -- Value of the password to set and map to the PASSWORD
    # environment variable.
    value: ""

  # -- Number of replicas to provision.
  replicaCount: 1

  image:
    # -- Visual Studio Code Server Image Repository Name.
    repository: linuxserver/code-server

    # -- Configures the image pull policy for Visual Studio Code Server.  Valid options include
    # [`Always`, `IfNotPresent`, `Never`]
    pullPolicy: IfNotPresent
    
    # -- (string) Overrides the image tag for Visual Studio Code Server whose default is the chart appVersion.
    tag: ""

  # -- map of security context settings to apply to the pod.
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    # -- specifies the Kubernetes Service type to create.
    type: ClusterIP
    # -- port the service should receive traffic on.
    port: 80
    # -- port the service should sent traffic to.
    containerPort: 8443

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: cloudflare-cluster-issuer
    hosts:
      - host: code-server.cluster.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
      # - hosts:
      #     - code-server.cluster.local
      #   secretName: code-server-tls

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  persistence:
    enabled: false
    annotations: {}
    accessModes:
      - ReadWriteOnce
    dataSource: {}
    resources:
      requests:
        storage: 10Gi
    storageClassName: ""

docker_daemon:
  nameOverride: ""
  fullnameOverride: ""
  image:
    # -- Docker Daemon Image Repository Name.
    repository: docker
  
    # -- Configures the image pull policy for Docker Daemon.  Valid options include
    # [`Always`, `IfNotPresent`, `Never`]
    pullPolicy: IfNotPresent

    # -- (string) Overrides the image tag for Docker Daemon whose default is `dind-rootless`.
    tag: "dind-rootless"

  # -- map of security context settings to apply to the pod.
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# -- map of annotations to apply to the pod.
podAnnotations: {}

# -- map of pod security context settings to apply to the pod.
podSecurityContext:
  fsGroup: 1000

nodeSelector: {}

tolerations: []

affinity: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- image pull secrets to retrieve image if required.
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
